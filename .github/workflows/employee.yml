name: Docker CI for Employee Management API

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Create .env file
      run: |
        cat > .env << EOL
        # Database configuration
        DB_HOST=db
        DB_PORT=5432
        DB_NAME=employee_db
        DB_USER=postgres
        DB_PASSWORD=postgres
        
        # PostgreSQL container variables
        POSTGRES_DB=employee_db
        POSTGRES_USER=postgres
        POSTGRES_PASSWORD=postgres
        
        # JWT Secrets
        JWT_SECRET=${{ secrets.JWT_SECRET }}
        SECRET_WORD=${{ secrets.SECRET_WORD }}
        
        # Environment
        NODE_ENV=development
        DATABASE_URL=postgres://postgres:postgres@db:5432/employee_db
        
        # Port
        PORT=3000
        EOL

    - name: Build and start database container
      run: |
        docker-compose up -d db
        # Wait for PostgreSQL to be ready
        docker-compose exec -T db sh -c "until pg_isready -U postgres; do sleep 2; done;"


    - name: Build and start application container
      run: |
        docker-compose up -d app
        # Wait for app to start
        echo "Waiting for app to start..."
        sleep 10

    - name: Run tests
      run: |
        docker-compose run test

    - name: Display logs if tests fail
      if: failure()
      run: |
        echo "Test failed. Displaying logs:"
        docker-compose logs

    - name: Cleanup
      if: always()
      run: |
        echo "Cleaning up containers and volumes..."
        docker-compose down -v