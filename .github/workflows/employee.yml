name: Docker CI for Employee Management API

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install Docker Compose
      run: |
        sudo apt-get update && sudo apt-get install -y docker-compose

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Create .env file
      run: |
        cat > .env << EOL
        # Database configuration
        DB_HOST=db
        DB_PORT=5432
        DB_NAME=employee_db
        DB_USER=postgres
        DB_PASSWORD=postgres
        
        # PostgreSQL container variables
        POSTGRES_DB=employee_db
        POSTGRES_USER=postgres
        POSTGRES_PASSWORD=postgres
        
        # JWT Secrets
        JWT_SECRET=${{ secrets.JWT_SECRET }}
        SECRET_WORD=${{ secrets.SECRET_WORD }}
        
        # Environment
        NODE_ENV=development
        DATABASE_URL=postgres://postgres:postgres@db:5432/employee_db
        
        # Port
        PORT=3000
        EOL

    - name: Start database container
      run: docker-compose up -d db

    - name: Wait for PostgreSQL to be ready
      run: |
        echo "Waiting for PostgreSQL to be ready..."
        until docker exec my_db pg_isready -U postgres -d employee_db; do
          echo "Waiting for database..."
          sleep 2
        done
        echo "Database is ready!"

    - name: Run database migrations
      run: docker-compose run app npx sequelize-cli db:migrate

    - name: Start application container
      run: docker-compose up -d app

    - name: Wait for app to start
      run: |
        echo "Waiting for app to start..."
        sleep 5

    - name: Run tests
      run: docker-compose run test

    - name: Display logs if tests fail
      if: failure()
      run: docker-compose logs

    - name: Cleanup
      if: always()
      run: docker-compose down -v
